#!/bin/bash
echo "=================================================="
echo "   _  ______  ___  __________________";
echo "  / |/ / __ \/ _ \/ __/  _/ __/_  __/";
echo " /    / /_/ / // / _/_/ /_\ \  / /   ";
echo "/_/|_/\____/____/___/___/___/ /_/    ";
echo -e "\e[0m"
echo "=================================================="


sleep 2

# DEGISKENLER by Nodeist
NBR_WALLET=wallet
NBR=nibid
NBR_ID=nibiru-testnet-1
NBR_PORT=48
NBR_FOLDER=.nibid
NBR_FOLDER2=nibiru
NBR_VER=v0.15.0
NBR_REPO=https://github.com/NibiruChain/nibiru.git
NBR_GENESIS=
NBR_ADDRBOOK=
NBR_MIN_GAS=0
NBR_DENOM=unibi
NBR_SEEDS=
NBR_PEERS=37713248f21c37a2f022fbbb7228f02862224190@35.243.130.198:26656,ff59bff2d8b8fb6114191af7063e92a9dd637bd9@35.185.114.96:26656,cb431d789fe4c3f94873b0769cb4fce5143daf97@35.227.113.63:26656


sleep 1

echo "export NBR_WALLET=${NBR_WALLET}" >> $HOME/.bash_profile
echo "export NBR=${NBR}" >> $HOME/.bash_profile
echo "export NBR_ID=${NBR_ID}" >> $HOME/.bash_profile
echo "export NBR_PORT=${NBR_PORT}" >> $HOME/.bash_profile
echo "export NBR_FOLDER=${NBR_FOLDER}" >> $HOME/.bash_profile
echo "export NBR_FOLDER2=${NBR_FOLDER2}" >> $HOME/.bash_profile
echo "export NBR_VER=${NBR_VER}" >> $HOME/.bash_profile
echo "export NBR_REPO=${NBR_REPO}" >> $HOME/.bash_profile
echo "export NBR_GENESIS=${NBR_GENESIS}" >> $HOME/.bash_profile
echo "export NBR_PEERS=${NBR_PEERS}" >> $HOME/.bash_profile
echo "export NBR_SEED=${NBR_SEED}" >> $HOME/.bash_profile
echo "export NBR_MIN_GAS=${NBR_MIN_GAS}" >> $HOME/.bash_profile
echo "export NBR_DENOM=${NBR_DENOM}" >> $HOME/.bash_profile
source $HOME/.bash_profile

sleep 1

if [ ! $NBR_NODENAME ]; then
	read -p "NODE ISMI YAZINIZ: " NBR_NODENAME
	echo 'export NBR_NODENAME='$NBR_NODENAME >> $HOME/.bash_profile
fi

echo -e "NODE ISMINIZ: \e[1m\e[32m$NBR_NODENAME\e[0m"
echo -e "CUZDAN ISMINIZ: \e[1m\e[32m$NBR_WALLET\e[0m"
echo -e "CHAIN ISMI: \e[1m\e[32m$NBR_ID\e[0m"
echo -e "PORT NUMARANIZ: \e[1m\e[32m$NBR_PORT\e[0m"
echo '================================================='

sleep 2


# GUNCELLEMELER by Nodeist
echo -e "\e[1m\e[32m1. GUNCELLEMELER YUKLENIYOR... \e[0m" && sleep 1
sudo apt update && sudo apt upgrade -y


# GEREKLI PAKETLER by Nodeist
echo -e "\e[1m\e[32m2. GEREKLILIKLER YUKLENIYOR... \e[0m" && sleep 1
sudo apt install curl tar wget clang pkg-config libssl-dev jq build-essenNBRl bsdmainutils git make ncdu gcc git jq chrony liblz4-tool -y

# GO KURULUMU by Nodeist
echo -e "\e[1m\e[32m1. GO KURULUYOR... \e[0m" && sleep 1
ver="1.18.2"
cd $HOME
wget "https://golang.org/dl/go$ver.linux-amd64.tar.gz"
sudo rm -rf /usr/local/go
sudo tar -C /usr/local -xzf "go$ver.linux-amd64.tar.gz"
rm "go$ver.linux-amd64.tar.gz"
echo "export PATH=$PATH:/usr/local/go/bin:$HOME/go/bin" >> ~/.bash_profile
source ~/.bash_profile
go version

sleep 1

# KUTUPHANE KURULUMU by Nodeist
echo -e "\e[1m\e[32m1. REPO YUKLENIYOR... \e[0m" && sleep 1
cd $HOME
git clone $NBR_REPO
cd $NBR_FOLDER2
git checkout $NBR_VER
make install

sleep 1

# KONFIGURASYON by Nodeist
echo -e "\e[1m\e[32m1. KONFIGURASYONLAR AYARLANIYOR... \e[0m" && sleep 1
$NBR config chain-id $NBR_ID
$NBR config keyring-backend file
$NBR init $NBR_NODENAME --chain-id $NBR_ID

# ADDRBOOK ve GENESIS by Nodeist
curl -s https://rpc.testnet-1.nibiru.fi/genesis | jq -r .result.genesis > $HOME/.nibid/config/genesis.json
wget $NBR_ADDRBOOK -O $HOME/$NBR_FOLDER/config/addrbook.json

# EŞLER VE TOHUMLAR by Nodeist
SEEDS="$NBR_SEEDS"
PEERS="$NBR_PEERS"
sed -i -e "s/^seeds *=.*/seeds = \"$SEEDS\"/; s/^persistent_peers *=.*/persistent_peers = \"$PEERS\"/" $HOME/$NBR_FOLDER/config/config.toml

sleep 1


# config pruning
pruning="custom"
pruning_keep_recent="100"
pruning_keep_every="0"
pruning_interval="50"
sed -i -e "s/^pruning *=.*/pruning = \"$pruning\"/" $HOME/$NBR_FOLDER/config/app.toml
sed -i -e "s/^pruning-keep-recent *=.*/pruning-keep-recent = \"$pruning_keep_recent\"/" $HOME/$NBR_FOLDER/config/app.toml
sed -i -e "s/^pruning-keep-every *=.*/pruning-keep-every = \"$pruning_keep_every\"/" $HOME/$NBR_FOLDER/config/app.toml
sed -i -e "s/^pruning-interval *=.*/pruning-interval = \"$pruning_interval\"/" $HOME/$NBR_FOLDER/config/app.toml


# ÖZELLEŞTİRİLMİŞ PORTLAR by Nodeist
sed -i.bak -e "s%^proxy_app = \"tcp://127.0.0.1:26658\"%proxy_app = \"tcp://127.0.0.1:2${NBR_PORT}8\"%; s%^laddr = \"tcp://127.0.0.1:26657\"%laddr = \"tcp://127.0.0.1:2${NBR_PORT}7\"%; s%^pprof_laddr = \"localhost:6060\"%pprof_laddr = \"localhost:${NBR_PORT}60\"%; s%^laddr = \"tcp://0.0.0.0:26656\"%laddr = \"tcp://0.0.0.0:2${NBR_PORT}6\"%; s%^prometheus_listen_addr = \":26660\"%prometheus_listen_addr = \":2${NBR_PORT}0\"%" $HOME/$NBR_FOLDER/config/config.toml
sed -i.bak -e "s%^address = \"tcp://0.0.0.0:1317\"%address = \"tcp://0.0.0.0:${NBR_PORT}7\"%; s%^address = \":8080\"%address = \":${NBR_PORT}80\"%; s%^address = \"0.0.0.0:9090\"%address = \"0.0.0.0:${NBR_PORT}90\"%; s%^address = \"0.0.0.0:9091\"%address = \"0.0.0.0:${NBR_PORT}91\"%" $HOME/$NBR_FOLDER/config/app.toml
sed -i.bak -e "s%^node = \"tcp://localhost:26657\"%node = \"tcp://localhost:2${NBR_PORT}7\"%" $HOME/$NBR_FOLDER/config/client.toml

# PROMETHEUS AKTIVASYON by Nodeist
sed -i -e "s/prometheus = false/prometheus = true/" $HOME/$NBR_FOLDER/config/config.toml

# MINIMUM GAS AYARI by Nodeist
sed -i -e "s/^minimum-gas-prices *=.*/minimum-gas-prices = \"0.00125$NBR_DENOM\"/" $HOME/$NBR_FOLDER/config/app.toml

# INDEXER AYARI by Nodeist
indexer="null" && \
sed -i -e "s/^indexer *=.*/indexer = \"$indexer\"/" $HOME/$NBR_FOLDER/config/config.toml

# RESET by Nodeist
$NBR tendermint unsafe-reset-all --home $HOME/$NBR_FOLDER

echo -e "\e[1m\e[32m4. SERVIS BASLATILIYOR... \e[0m" && sleep 1
# create service
sudo tee /etc/systemd/system/$NBR.service > /dev/null <<EOF
[Unit]
Description=$NBR
After=network.target
[Service]
Type=simple
User=$USER
ExecStart=$(which $NBR) start
Restart=on-failure
RestartSec=10
LimitNOFILE=65535
[Install]
WantedBy=multi-user.target
EOF


# SERVISLERI BASLAT by Nodeist
sudo systemctl daemon-reload
sudo systemctl enable $NBR
sudo systemctl restart $NBR

echo '=============== KURULUM TAMAM! by Nodeist ==================='
echo -e 'LOGLARI KONTROL ET: \e[1m\e[32mjournalctl -fu nibid -o cat\e[0m'
echo -e "SENKRONIZASYONU KONTROL ET: \e[1m\e[32mcurl -s localhost:${NBR_PORT}657/status | jq .result.sync_info\e[0m"

source $HOME/.bash_profile
