#!/bin/bash
echo "=================================================="
echo "   _  ______  ___  __________________";
echo "  / |/ / __ \/ _ \/ __/  _/ __/_  __/";
echo " /    / /_/ / // / _/_/ /_\ \  / /   ";
echo "/_/|_/\____/____/___/___/___/ /_/    ";
echo -e "\e[0m"
echo "=================================================="


sleep 2

# DEGISKENLER by Nodeist
GTP_WALLET=wallet
GTP=gitopiad
GTP_ID=gitopia-janus-testnet-2
GTP_PORT=11
GTP_FOLDER=.gitopia
GTP_FOLDER2=gitopia
GTP_VER=v1.2.0
GTP_REPO=
GTP_GENESIS=
GTP_ADDRBOOK=http://65.108.6.45:8000/gitopia/addrbook.json
GTP_MIN_GAS=0
GTP_DENOM=utlore
GTP_SEEDS=
GTP_PEERS=399d4e19186577b04c23296c4f7ecc53e61080cb@seed.gitopia.com:26656


sleep 1

echo "export GTP_WALLET=${GTP_WALLET}" >> $HOME/.bash_profile
echo "export GTP=${GTP}" >> $HOME/.bash_profile
echo "export GTP_ID=${GTP_ID}" >> $HOME/.bash_profile
echo "export GTP_PORT=${GTP_PORT}" >> $HOME/.bash_profile
echo "export GTP_FOLDER=${GTP_FOLDER}" >> $HOME/.bash_profile
echo "export GTP_FOLDER2=${GTP_FOLDER2}" >> $HOME/.bash_profile
echo "export GTP_VER=${GTP_VER}" >> $HOME/.bash_profile
echo "export GTP_REPO=${GTP_REPO}" >> $HOME/.bash_profile
echo "export GTP_GENESIS=${GTP_GENESIS}" >> $HOME/.bash_profile
echo "export GTP_PEERS=${GTP_PEERS}" >> $HOME/.bash_profile
echo "export GTP_SEED=${GTP_SEED}" >> $HOME/.bash_profile
echo "export GTP_MIN_GAS=${GTP_MIN_GAS}" >> $HOME/.bash_profile
echo "export GTP_DENOM=${GTP_DENOM}" >> $HOME/.bash_profile
source $HOME/.bash_profile

sleep 1

if [ ! $GTP_NODENAME ]; then
	read -p "NODE ISMI YAZINIZ: " GTP_NODENAME
	echo 'export GTP_NODENAME='$GTP_NODENAME >> $HOME/.bash_profile
fi

echo -e "NODE ISMINIZ: \e[1m\e[32m$GTP_NODENAME\e[0m"
echo -e "CUZDAN ISMINIZ: \e[1m\e[32m$GTP_WALLET\e[0m"
echo -e "CHAIN ISMI: \e[1m\e[32m$GTP_ID\e[0m"
echo -e "PORT NUMARANIZ: \e[1m\e[32m$GTP_PORT\e[0m"
echo '================================================='

sleep 2


# GUNCELLEMELER by Nodeist
echo -e "\e[1m\e[32m1. GUNCELLEMELER YUKLENIYOR... \e[0m" && sleep 1
sudo apt update && sudo apt upgrade -y


# GEREKLI PAKETLER by Nodeist
echo -e "\e[1m\e[32m2. GEREKLILIKLER YUKLENIYOR... \e[0m" && sleep 1
sudo apt install curl tar wget clang pkg-config libssl-dev jq build-essenGTPl bsdmainutils git make ncdu gcc git jq chrony liblz4-tool -y

# GO KURULUMU by Nodeist
echo -e "\e[1m\e[32m1. GO KURULUYOR... \e[0m" && sleep 1
ver="1.18.2"
cd $HOME
wget "https://golang.org/dl/go$ver.linux-amd64.tar.gz"
sudo rm -rf /usr/local/go
sudo tar -C /usr/local -xzf "go$ver.linux-amd64.tar.gz"
rm "go$ver.linux-amd64.tar.gz"
echo "export PATH=$PATH:/usr/local/go/bin:$HOME/go/bin" >> ~/.bash_profile
source ~/.bash_profile
go version

sleep 1

# KUTUPHANE KURULUMU by Nodeist
echo -e "\e[1m\e[32m1. REPO YUKLENIYOR... \e[0m" && sleep 1
cd $HOME
curl https://get.gitopia.com | bash
git clone -b v1.2.0 gitopia://gitopia/gitopia && cd gitopia
make install

sleep 1

# KONFIGURASYON by Nodeist
echo -e "\e[1m\e[32m1. KONFIGURASYONLAR AYARLANIYOR... \e[0m" && sleep 1
$GTP config chain-id $GTP_ID
$GTP config keyring-backend file
$GTP init $GTP_NODENAME --chain-id $GTP_ID

# ADDRBOOK ve GENESIS by Nodeist
wget https://server.gitopia.com/raw/gitopia/testnets/master/gitopia-janus-testnet-2/genesis.json.gz
gunzip genesis.json.gz
mv genesis.json $HOME/.gitopia/config/genesis.json
wget $GTP_ADDRBOOK -O $HOME/$GTP_FOLDER/config/addrbook.json

# EŞLER VE TOHUMLAR by Nodeist
SEEDS="$GTP_SEEDS"
PEERS="$GTP_PEERS"
sed -i -e "s/^seeds *=.*/seeds = \"$SEEDS\"/; s/^persistent_peers *=.*/persistent_peers = \"$PEERS\"/" $HOME/$GTP_FOLDER/config/config.toml

sleep 1


# config pruning
pruning="custom"
pruning_keep_recent="119"
pruning_keep_every="0"
pruning_interval="19"
sed -i -e "s/^pruning *=.*/pruning = \"$pruning\"/" $HOME/$GTP_FOLDER/config/app.toml
sed -i -e "s/^pruning-keep-recent *=.*/pruning-keep-recent = \"$pruning_keep_recent\"/" $HOME/$GTP_FOLDER/config/app.toml
sed -i -e "s/^pruning-keep-every *=.*/pruning-keep-every = \"$pruning_keep_every\"/" $HOME/$GTP_FOLDER/config/app.toml
sed -i -e "s/^pruning-interval *=.*/pruning-interval = \"$pruning_interval\"/" $HOME/$GTP_FOLDER/config/app.toml


# ÖZELLEŞTİRİLMİŞ PORTLAR by Nodeist
sed -i.bak -e "s%^proxy_app = \"tcp://127.0.0.1:26658\"%proxy_app = \"tcp://127.0.0.1:2${GTP_PORT}8\"%; s%^laddr = \"tcp://127.0.0.1:26657\"%laddr = \"tcp://127.0.0.1:2${GTP_PORT}7\"%; s%^pprof_laddr = \"localhost:6060\"%pprof_laddr = \"localhost:${GTP_PORT}60\"%; s%^laddr = \"tcp://0.0.0.0:26656\"%laddr = \"tcp://0.0.0.0:2${GTP_PORT}6\"%; s%^prometheus_listen_addr = \":26660\"%prometheus_listen_addr = \":2${GTP_PORT}0\"%" $HOME/$GTP_FOLDER/config/config.toml
sed -i.bak -e "s%^address = \"tcp://0.0.0.0:1317\"%address = \"tcp://0.0.0.0:${GTP_PORT}7\"%; s%^address = \":8080\"%address = \":${GTP_PORT}80\"%; s%^address = \"0.0.0.0:9090\"%address = \"0.0.0.0:${GTP_PORT}90\"%; s%^address = \"0.0.0.0:9091\"%address = \"0.0.0.0:${GTP_PORT}91\"%" $HOME/$GTP_FOLDER/config/app.toml
sed -i.bak -e "s%^node = \"tcp://localhost:26657\"%node = \"tcp://localhost:2${GTP_PORT}7\"%" $HOME/$GTP_FOLDER/config/client.toml

# PROMETHEUS AKTIVASYON by Nodeist
sed -i -e "s/prometheus = false/prometheus = true/" $HOME/$GTP_FOLDER/config/config.toml

# MINIMUM GAS AYARI by Nodeist
sed -i -e "s/^minimum-gas-prices *=.*/minimum-gas-prices = \"0.00125$GTP_DENOM\"/" $HOME/$GTP_FOLDER/config/app.toml

# INDEXER AYARI by Nodeist
indexer="null" && \
sed -i -e "s/^indexer *=.*/indexer = \"$indexer\"/" $HOME/$GTP_FOLDER/config/config.toml

# RESET by Nodeist
$GTP tendermint unsafe-reset-all --home $HOME/$GTP_FOLDER

echo -e "\e[1m\e[32m4. SERVIS BASLATILIYOR... \e[0m" && sleep 1
# create service
sudo tee /etc/systemd/system/$GTP.service > /dev/null <<EOF
[Unit]
Description=$GTP
After=network.target
[Service]
Type=simple
User=$USER
ExecStart=$(which $GTP) start
Restart=on-failure
RestartSec=10
LimitNOFILE=65535
[Install]
WantedBy=multi-user.target
EOF


# SERVISLERI BASLAT by Nodeist
sudo systemctl daemon-reload
sudo systemctl enable $GTP
sudo systemctl restart $GTP

echo '=============== KURULUM TAMAM! by Nodeist ==================='
echo -e 'LOGLARI KONTROL ET: \e[1m\e[32mjournalctl -fu gitopiad -o cat\e[0m'
echo -e "SENKRONIZASYONU KONTROL ET: \e[1m\e[32mcurl -s localhost:${GTP_PORT}657/status | jq .result.sync_info\e[0m"

source $HOME/.bash_profile
